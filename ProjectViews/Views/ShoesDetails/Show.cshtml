@using Data.Models
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Newtonsoft.Json
@model IEnumerable<Data.Models.ShoeDetails>

@{
    HttpClient _httpClient = new HttpClient();
    ViewData["Title"] = "Show";
    //lay data tu bang ShoeDetail
    string apiUrls = $"https://localhost:7109/api/ShoeDetails/get-all-shoeDetails";
    var responses = await _httpClient.GetAsync(apiUrls); // goi api lay data
    string apiDatas = await responses.Content.ReadAsStringAsync(); // doc data tra ve
    var shoeDetails = JsonConvert.DeserializeObject<List<ShoeDetails>>(apiDatas);
    //lay dữ liệu color từ bảng Color
    string apiUrlcolr = $"https://localhost:7109/api/Color/get-all-colors";
    var responsecolr = await _httpClient.GetAsync(apiUrlcolr);
    string apiDatacolr = await responsecolr.Content.ReadAsStringAsync();
    var colors = JsonConvert.DeserializeObject<List<Colors>>(apiDatacolr);
    //lay dữ liệu size từ bảng Size
    string apiUrlsize = $"https://localhost:7109/api/Size/get-all-size";
    var responsesize = await _httpClient.GetAsync(apiUrlsize);
    string apiDatasize = await responsesize.Content.ReadAsStringAsync();
    var sizes = JsonConvert.DeserializeObject<List<Sizes>>(apiDatasize);
    //lay du lieu tu bang Brand
    string apiUrlbrand = $"https://localhost:7109/api/Brand/get-all-brands";
    var responsebrand = await _httpClient.PostAsync(apiUrlbrand, null);
    string apiDatabrand = await responsebrand.Content.ReadAsStringAsync();
    var brands = JsonConvert.DeserializeObject<List<Brands>>(apiDatabrand);
    //lay du lieu tu bang size_shoeDetail
    string apiUrlsize_shoeDetail = $"https://localhost:7109/api/SIzes_ShoeDetails/get-all-size-shoe-details";
    var responsesize_shoeDetail = await _httpClient.GetAsync(apiUrlsize_shoeDetail);
    string apiDatasize_shoeDetail = await responsesize_shoeDetail.Content.ReadAsStringAsync();
    var size_shoeDetails = JsonConvert.DeserializeObject<List<Sizes_ShoeDetails>>(apiDatasize_shoeDetail);
    //lay du lieu tu bang color_shoeDetail
    string apiUrlcolor_shoeDetail = $"https://localhost:7109/api/Color_ShoeDetails/get-all-color_shoeDetails";
    var apiDatacolor_shoeDetail = await _httpClient.GetAsync(apiUrlcolor_shoeDetail);
    string apiColorShoesDetails = await apiDatacolor_shoeDetail.Content.ReadAsStringAsync();
    var color_shoeDetails = JsonConvert.DeserializeObject<List<Color_ShoeDetails>>(apiColorShoesDetails);
}
@if (Model.Count() == 0)
{
    <h1>There are no shoes in the database <a asp-action="Create">Create Now ?</a> </h1>
}
else
{
    <h1>Manager Shoes</h1>
    <p>
        <a asp-action="Create">Create New</a>
    </p>

    <form action="/ShoesDetails/Show" method="get">
        <label for="pageSize">Số lượng hiển thị:</label>
        <select id="pageSize" name="pageSize">
            <option value="10">10</option>
            <option value="20">20</option>
            <option value="50">50</option>
        </select>
        <input type="submit" value="Xem">
    </form>

    <form asp-action="DeleteMany">
        <table class="table">
            <thead>
            <tr>
                <th>
                    😢
                </th>
                <th>
                    Category
                </th>
                <th>
                    Supplier
                </th>
                <th>
                    Brand
                </th>
                <th>
                    Name
                </th>
                <th>
                    Cost Price
                </th>
                <th>
                    Sell Price
                </th>
                <th>
                    Available Quantity
                </th>
                <th>
                    Status
                </th>
                <th>
                    Sale Name
                </th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <input type="checkbox" value="@item.Id" name="deleteMany" class="form-check-input"/>
                    </td>
                    <td>
                        @{
                            //lay du lieu category
                            string apiUrl = $"https://localhost:7109/api/Categories/get-all-categories";
                            var response = await _httpClient.GetAsync(apiUrl);
                            string apidata = await response.Content.ReadAsStringAsync();
                            var cat = JsonConvert.DeserializeObject<List<Categories>>(apidata);
                            //convert list json thanh list string
                        }
                        @cat.Where(x => x.Id == item.IdCategory).Select(x => x.CategoryName).FirstOrDefault()
                    </td>
                    <td>
                        @{
                            //lay du lieu supplier
                            string apiUrl1 = "https://localhost:7109/api/Suppliers/get-all-supplier";
                            var response1 = await _httpClient.GetAsync(apiUrl1);
                            string apidata1 = await response1.Content.ReadAsStringAsync();
                            var sp = JsonConvert.DeserializeObject<List<Supplier>>(apidata1);
                        }
                        @sp.Where(x => x.Id == item.IdSupplier).Select(x => x.Address).FirstOrDefault()
                    </td>
                    <td>
                        @{
                            // lay du lieu brand
                            string apiUrl2 = "https://localhost:7109/api/Brands/get-all-brands";
                            var response2 = await _httpClient.GetAsync(apiUrl2);
                            string apidata2 = await response2.Content.ReadAsStringAsync();
                            var br = JsonConvert.DeserializeObject<List<Brands>>(apidata2);
                        }
                        @br.Where(x => x.Id == item.IdBrand).Select(x => x.Name).FirstOrDefault()
                    </td>
                    <td>
                    @{
                        var colorDetails = color_shoeDetails.FirstOrDefault(p => p.IdShoeDetail == item.Id).IdColor;
                        var sizeDetails = size_shoeDetails.FirstOrDefault(p => p.IdShoeDetails == item.Id).IdSize;
                    }
                    <strong> @item.Name - @sizes.FirstOrDefault(p=>p.Id ==sizeDetails).SizeNumber </strong> <span class="dot" style="background-color: #@colors.FirstOrDefault(p=> p.Id == colorDetails).ColorName"></span>
                    <td>
                        <p style="color:green">@item.CostPrice $</p>
                    </td>
                    <td>
                        <p style="color:red">@item.SellPrice $</p>
                    </td>
                    <td>
                        @item.AvailableQuantity (Product)
                    </td>
                    <td>
                        @if (item.Status == 1 && item.AvailableQuantity > 0)
                        {
                            <p style="color:green">Available</p>
                        }
                        else
                        {
                            <p style="color:red">Out of stock</p>
                        }
                    </td>
                    <td>
                        @{
                            //lay du lieu sale
                            string apiUrl3 = "https://localhost:7109/api/Sales/Show-Sales";
                            var response3 = await _httpClient.GetAsync(apiUrl3);
                            string apidata3 = await response3.Content.ReadAsStringAsync();
                            var sl = JsonConvert.DeserializeObject<List<Sales>>(apidata3);
                        }
                        @sl.Where(x => x.Id == item.IdSale).Select(x => x.SaleName).FirstOrDefault()
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
            </tbody>

        </table >
        <input type="submit" value="Delete Many" class="btn btn-danger"/>
    </form>

    <div class="pagination">
        @if (ViewBag.HasPreviousPage)
        {
            <a href="@Url.Action("Show", new { page = ViewBag.PreviousPage })">Previous</a>
        }

        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            if (i == ViewBag.CurrentPage)
            {
                <span>@i</span>
            }
            else
            {
                <a href="@Url.Action("Show", new { page = i })">@i</a>
            }
        }

        @if (ViewBag.HasNextPage)
        {
            <a href="@Url.Action("Show", new { page = ViewBag.NextPage })">Next</a>
        }
    </div>

}
<style>
    .dot {
        height: 25px;
        width: 25px;
        border-radius: 50%;
        display: inline-block;
    }
</style>